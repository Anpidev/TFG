spring.application.name=AnaliticaExpress

# Asegúrate de que el HOSTNAME y PUERTO sean los correctos del "Internal Connection" de tu DB en Render
# El formato es jdbc:postgresql://HOSTNAME:PUERTO/DATABASE_NAME
spring.datasource.url=jdbc:postgresql://dpg-d0mfmsemcj7s7399c7i0-a.oregon-postgres.render.com:5432/analiticaexpress 
# Si el host corto 'dpg-d0mfmsemcj7s7399c7i0-a' funciona desde la red interna de Render, puedes probarlo,
# pero el completo es más seguro. Verifica el puerto también.

spring.datasource.username=anpidev
spring.datasource.password=9GGx0w8wPtMOAKzJdrJM6CSbOdaKZnzJ
spring.datasource.driver-class-name=org.postgresql.Driver # <--- CORREGIDO

spring.sql.init.mode=always # Esto ejecutará schema.sql y data.sql si existen. Asegúrate de que su sintaxis sea compatible con PostgreSQL.

# spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect # <--- CORREGIDO (o comentado/eliminado)
# Dejar que Hibernate autodetecte es a menudo mejor.

spring.jpa.hibernate.ddl-auto=update # 'update' está bien para desarrollo. Para la primera vez, 'create' puede ser útil si la DB está vacía.
# Considera 'validate' o 'none' para producción más adelante.
spring.jpa.show-sql=true

jwt.secret=secr3toCl@vesecr3toCl@vesecr3toCl@ve
jwt.expiration=3600

logging.level.org.springframework.web=DEBUG